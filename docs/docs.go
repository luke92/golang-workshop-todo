// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Go Programming Language Workshop",
            "url": "https://golang-workshop.io",
            "email": "todoapi@golang-workshop.io"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/mit-license.php"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Get all to-do items from the data store",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all to-do items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "X-Todo-API-Authorization-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Item"
                            }
                        },
                        "headers": {
                            "X-Todo-API-Request-ID": {
                                "type": "string",
                                "description": "API Request Id"
                            },
                            "X-Todo-API-Revision": {
                                "type": "string",
                                "description": "API Revision Number"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Insert a to-do item into the data store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a to-do item",
                "parameters": [
                    {
                        "description": "To-Do Item",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Item"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "X-Todo-API-Authorization-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\\\"message\\\": \\\"Ok\\\"}",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Todo-API-Request-ID": {
                                "type": "string",
                                "description": "API Request Id"
                            },
                            "X-Todo-API-Revision": {
                                "type": "string",
                                "description": "API Revision Number"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Insert a to-do item into the data store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a to-do item",
                "parameters": [
                    {
                        "description": "To-Do Item",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Item"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "X-Todo-API-Authorization-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\\\"message\\\": \\\"Ok\\\"}",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Todo-API-Request-ID": {
                                "type": "string",
                                "description": "API Request Id"
                            },
                            "X-Todo-API-Revision": {
                                "type": "string",
                                "description": "API Revision Number"
                            }
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "description": "Get a to-do item by id from the data store",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a to-do item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "To-Do Item Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "X-Todo-API-Authorization-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Item"
                        },
                        "headers": {
                            "X-Todo-API-Request-ID": {
                                "type": "string",
                                "description": "API Request Id"
                            },
                            "X-Todo-API-Revision": {
                                "type": "string",
                                "description": "API Revision Number"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a to-do item from the data store",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a to-do item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "To-Do Item Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "X-Todo-API-Authorization-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\\\"message\\\": \\\"Ok\\\"}",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Todo-API-Request-ID": {
                                "type": "string",
                                "description": "API Request Id"
                            },
                            "X-Todo-API-Revision": {
                                "type": "string",
                                "description": "API Revision Number"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a to-do item into the data store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a to-do item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "To-Do Item Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "To-Do Item",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Item"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "X-Todo-API-Authorization-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\\\"message\\\": \\\"Ok\\\"}",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Todo-API-Request-ID": {
                                "type": "string",
                                "description": "API Request Id"
                            },
                            "X-Todo-API-Revision": {
                                "type": "string",
                                "description": "API Revision Number"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Item": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isdone": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "todo.golang-workshop.io",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "To-Do Sample API",
	Description:      "Sample To-Do API written in Golang for Go Programming Language Workshop.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
